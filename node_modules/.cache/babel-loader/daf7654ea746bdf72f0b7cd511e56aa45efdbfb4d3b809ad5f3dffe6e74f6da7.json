{"ast":null,"code":"import*as THREE from'./node_modules/three/build/three.module.js';import{OrbitControls}from'./node_modules/three/examples/jsm/controls/OrbitControls.js';// import {SpaceShip} from './js/spaceship.js';\nimport{GLTFLoader}from'./node_modules/three/examples/jsm/loaders/GLTFLoader.js';var camera,scene,renderer,controls,clock;var Ship;var Belt;var Ammo;var Score=0;var Game_over=false;var Target;var mesh,mixer;var intersected;var idleAction,walkAction,runAction;var idleWeight,walkWeight,runWeight;var actions,settings;var matrix=new THREE.Matrix4();var loader=new GLTFLoader();var raycaster=new THREE.Raycaster();var mouse=new THREE.Vector2(1,1);var color=new THREE.Color();var white=new THREE.Color().setHex(0xffffff);init();animate();function init(){camera=new THREE.PerspectiveCamera(10,window.innerWidth/window.innerHeight,0.1,1000);camera.position.set(0,0,50);clock=new THREE.Clock();scene=new THREE.Scene();//=========================Lighting================================\nvar light=new THREE.HemisphereLight(0xffffff,0x333333);light.position.set(0,0,0);// scene.add( light );\n//const light = new THREE.AmbientLight( 0x404040 ); // soft white light\nscene.add(light);var pointlight=new THREE.PointLight(0xa0a0a0);pointlight.position.set(20,40,20);scene.add(pointlight);var dirLight=new THREE.DirectionalLight(0xffffff);dirLight.position.set(-3,10,-10);dirLight.castShadow=true;dirLight.shadow.camera.top=2;dirLight.shadow.camera.bottom=-2;dirLight.shadow.camera.left=-2;dirLight.shadow.camera.right=2;dirLight.shadow.camera.near=0.1;dirLight.shadow.camera.far=40;scene.add(dirLight);scene.fog=new THREE.Fog(0x333333,25,300);//==========================Load==============================\n//scene.background = new THREE.Color( 0x25037c );\nloadSpaceShip();Belt=new THREE.Group();loadInitAsteroid();Belt.start_time=0;Ammo=new Object();Ammo.group=new THREE.Group();scene.add(Ammo.group);loadLaser();//===========================render=========================\nrenderer=new THREE.WebGLRenderer({antialias:true,alpha:true});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(window.innerWidth,window.innerHeight);renderer.setClearColor(0x000000,0);// the default\ndocument.body.appendChild(renderer.domElement);controls=new OrbitControls(camera,renderer.domElement);controls.enableDamping=false;controls.enableZoom=false;controls.enablePan=false;// Create a mesh using the geometry and material\nTarget=new THREE.Group();// Create the spheres\nvar sphereRadius=0.1;var sphereGeometry=new THREE.SphereGeometry(sphereRadius,32,32);var sphereMaterial=new THREE.MeshBasicMaterial({color:0xffffff,// Set the desired color\ntransparent:true,opacity:0.5// Set the desired opacity (0.0 - fully transparent, 1.0 - fully opaque)\n});//console.log(window.innerWidth);\n//\n// scene.add(Target)\n// Position and rotate the plane as needed\n// Add the plane to the scene\n//scene.add(Target);\n// console.log(Target);\n// //controls.screenSpacePanning = false\n// console.log(controls);\ncontrols.mouseButtons={LEFT:'',MIDDLE:THREE.MOUSE.DOLLY,RIGHT:THREE.MOUSE.PAN};window.addEventListener('resize',onWindowResize);document.addEventListener('mousemove',onMouseMove);document.addEventListener(\"click\",fireCannon);document.onkeypress=KeyCheck;document.onkeydown=KeyCheck;controls.update();}function loadSpaceShip(){loader.load(// resource URL\n'/assets/model.glb',// called when the resource is loaded\nfunction(gltf){//console.log(gltf.scene);\nShip=gltf.scene;Ship.rotation.y=Math.PI;//Ship.rotation.z = Math.PI\nShip.position.y=-2;scene.add(Ship);});}function loadLaser(){loader.load(// resource URL\n'/assets/beam.glb',// called when the resource is loaded\nfunction(gltf){Ammo.laser=gltf.scene;});}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight);}function onMouseMove(event){event.preventDefault();mouse.x=event.clientX/window.innerWidth*2-1;mouse.y=-(event.clientY/window.innerHeight)*2+1;shipMove();}function KeyCheck(){var KeyID=event.keyCode;switch(KeyID){//left\ncase 37:left();break;case 65:left();break;//up\ncase 38:up();break;case 87:up();break;//right\ncase 39:right();break;case 68:right();break;//down\ncase 40:down();break;case 83:down();break;}}function shipMove(){if(Ship){Ship.rotation.x=mouse.y/(2*Math.PI)+Math.PI/16;Ship.rotation.z=-(mouse.x/Math.PI);Ship.rotation.y=-(mouse.x/(2*Math.PI))-Math.PI;}//console.log(Ship.rotation);\n//Ship.rotation.y = (Ship.rotation.x-(Math.PI/2+.5))+(Ship.rotation.z-Math.PI)\n//Ship.rotation.y = -Math.sin(mouse.x,mouse.y)/2\n}function animate(){requestAnimationFrame(animate);controls.update();//console.log(Belt);\nif(Belt){//console.log(Belt);\nif(!Game_over)intersectedRay();}//updateLaserPosistions\nif(!Game_over)addAsteroids();moveAsteroids();updateLasers();updateExplode();if(Game_over){var canvas=document.querySelector('canvas');if(canvas.getAttribute('restart')==\"true\"){document.querySelector('.game_over').classList.add('hidden');Game_over=undefined;canvas.setAttribute('restart',false);document.querySelector('h1 span').setAttribute('value',0);}}// Get the time elapsed since the last frame, used for mixer update (if not in single step mode)\nvar mixerUpdateDelta=clock.getDelta();// Update the animation mixer, and render this frame\nif(mixer){mixer.update(mixerUpdateDelta);}//render();\nrenderer.render(scene,camera);}/*==========================Fire=====================*/function fireCannon(){// console.log('fire');\n// console.log(intersected);\n// console.log(Belt);\nif(!Game_over){fireLaser();if(intersected){if(!intersected.object.parent.explode){intersected.object.parent.explode=true;intersected.object.parent.weight=false;intersected.object.parent.start=clock.getElapsedTime()+0.5;// console.log(document.querySelector(\"h1 span\"));\nvar value=parseInt(document.querySelector(\"h1 span\").getAttribute('value'))+100;// console.log(value);\ndocument.querySelector(\"h1 span\").setAttribute('value',value);document.querySelector(\"h1 span\").innerText=value;}}}}/***\r\n****================Laser================\r\n****/ // function fireLaser() {\n//   const ammo = Ammo.laser.clone();\n//   const targetZ = 100; // Fixed z-index for the laser's target position\n//\n//   ammo.position.copy(Ship.position);\n//   ammo.scale.set(5, 2, 5);\n//\n//   // Calculate the mouse position in normalized device coordinates (NDC)\n//   const mousePosition = new THREE.Vector3(\n//     (mouse.x / window.innerWidth) * 2 - 1,\n//     -(mouse.y / window.innerHeight) * 2 + 1,\n//     0.5\n//   );\n//\n//   // Create a raycaster from the mouse position\n//   const raycaster = new THREE.Raycaster();\n//   raycaster.setFromCamera(mousePosition, camera);\n//\n//   // Intersect the raycaster with the scene's objects\n//   const intersects = raycaster.intersectObjects(scene.children, true);\n//\n//   if (intersects.length > 0) {\n//     // Retrieve the first intersection point\n//     const intersectPoint = intersects[0].point;\n//\n//     // Set target position to the intersection point\n//     ammo.target = intersectPoint;\n//   }\n//   else{\n//\n//   }\n//\n//   Ammo.group.add(ammo);\n// }\nfunction fireLaser(){var ammo=Ammo.laser.clone();//\nammo.position.copy(Ship.position);ammo.scale.set(0.25,0.25,0.25);ammo.rotation.x=mouse.y*Math.PI/8-Math.PI/2;ammo.rotation.z=-1*mouse.x*Math.PI/4;//\n// // Calculate the target position based on the mouse position\nvar zTarget=100;//let xTarget = Math.sin(mouse.x*Math.PI/4)\nvar xTarget=mouse.x*Math.PI/4;var yTarget=mouse.y*Math.PI/8;//degrees to radians\nxTarget=xTarget*180/(Math.PI*3/2);yTarget=yTarget*180/(Math.PI*3/2);var targetPosition=new THREE.Vector3(xTarget,yTarget,-zTarget);ammo.target=targetPosition.normalize();var intersects=raycaster.intersectObjects(scene.children,true);if(intersects.length>0){// Retrieve the first intersection point\nvar intersectPoint=intersects[0].point;// Set target position to the intersection point\nammo.target=intersectPoint.normalize();}//console.log(mouse,ammo.target);\nAmmo.group.add(ammo);}// function fireLaser(){\n//   const ammo = Ammo.laser.clone()\n//   //belt.position.set(getRandomInt(max)-max/2,getRandomInt(max)-max/2,-getRandomInt(max)-max/2)\n//   //getRandomInt(max)-max/2\n//   ammo.position.set(Ship.position.x,Ship.position.y,Ship.position.z)\n//   ammo.scale.set(5,2,5)\n//\n//   //ammo.rotation.set(Math.PI/4,Math.PI/4,0)\n//\n//   ammo.rotation.x = (mouse.y/(2*Math.PI))+(Math.PI/4)\n//   ammo.rotation.z =  0//-(mouse.x/(Math.PI))+(Math.PI/4)\n//   ammo.rotation.y = -(mouse.x/(Math.PI))+(Math.PI/4)//-Math.sin(mouse.x,mouse.y)/2\n//\n//   ammo.mouse = mouse.clone()\n//   //console.log(mouse);\n//   Ammo.group.add(ammo)\n//\n// }\n/*==================Animamations=====================*/function updateLasers(){var t=clock.getElapsedTime();var max_diff=0.25;for(var i=0;i<Ammo.group.children.length;i++){var position_t=Ammo.group.children[i].position;// position_t.x = Ammo.group.children[i].target.x\n// position_t.y = Ammo.group.children[i].target.y\n// position_t.z = Ammo.group.children[i].target.z\nposition_t.x+=Ammo.group.children[i].target.x/max_diff;position_t.y+=Ammo.group.children[i].target.y/max_diff;position_t.z+=Ammo.group.children[i].target.z/max_diff;}}// function updateLasers(){\n//   //console.log(Ammo);\n//   const max_diff=1;\n//   const t = clock.getElapsedTime()\n//   for (var i =0;i<Ammo.group.children.length;i++)\n//   {\n//     //console.log(Ammo.group.children[i]);\n//     const rotation_t = Ammo.group.children[i].rotation\n//     //console.log(rotation_t);\n//     Ammo.group.children[i].position.x+=Ammo.group.children[i].mouse.x/max_diff//(rotation_t.x/max_diff)\n//     Ammo.group.children[i].position.y+=Ammo.group.children[i].mouse.y/max_diff\n//     //Ammo.group.children[i].position.y+=(rotation_t.y/max_diff)\n//     Ammo.group.children[i].position.z-=1\n//   }\n// }\nfunction updateExplode(){if(Belt){//console.log(Belt.children);\nvar total=Belt.children.length;for(var i=0;i<Belt.children.length;i++){if(Belt.children[i].explode){if(Belt.children[i].explode==true){if(Belt.children[i].start<clock.getElapsedTime())explode(Belt.children[i]);}if(Belt.children[i].start+3<clock.getElapsedTime()){Belt.remove(Belt.children[i]);}}}}}function explode(astro,to){var total=astro.children.length;var diff=50;for(var i=1;i<total-1;i++){astro.children[i].position.x+=Math.sin(i/total)/diff;astro.children[i].position.y+=Math.cos(2*i/total)/diff;astro.children[i].position.z+=Math.tan(2*i/total)/diff;}}/*==========================Targeting======================*/function intersectedRay(){raycaster.setFromCamera(mouse,camera);var intersection=raycaster.intersectObject(Belt);//console.log(raycaster);\nif(intersection.length>0){intersected=intersection[0];//console.log(intersection);\nreturn intersected;}return null;}/*============================Ateroid Feild=================================*/function loadInitAsteroid(){loader.load(// resource URL\n'/assets/astro2.glb',// called when the resource is loaded\nfunction(gltf){Belt.model=gltf.scene.clone();loadAsteroid(40,true);});//console.log(Belt);\nscene.add(Belt);}function loadAsteroid(num,first){//*=====================Feild of view===================*/\nvar max=80;console.log(num);if(num>30){num=30;}for(var i=0;i<num;i++){var belt=Belt.model.clone();belt.position.set(getRandomInt(max)-max/2,getRandomInt(max)-max/2,-150-getRandomInt(max)-max/2);belt.rotation.set(getRandomInt(360),getRandomInt(360),getRandomInt(360));//getRandomInt(max)-max/2\n//belt.position.set(0,0,-20)\nif(!first){belt.spawn_time=clock.getElapsedTime();}else{belt.spawn_time=0;}Belt.add(belt);}}function addAsteroids(){if(Belt){var t=clock.getElapsedTime();if(Belt.start_time+2<t){loadAsteroid(10+parseInt(t)/2,false);Belt.start_time=t;// console.log(t);\n}}}function moveAsteroids(){if(Belt){//console.log(Belt.children);\n//const total = Belt.children.length\nfor(var i=0;i<Belt.children.length;i++){Belt.children[i].position.z+=1;if(Belt.children[i].spawn_time+5<clock.getElapsedTime()){//console.log('DELETE');\nBelt.remove(Belt.children[i]);}//intersects with ship\nif(Belt.children[i].weight!=false){if(Math.abs(Belt.children[i].position.x-Ship.position.x)<5&&Math.abs(Belt.children[i].position.y-Ship.position.y)<2&&Math.abs(Belt.children[i].position.z-Ship.position.z)<2){// console.log(Belt.children[i].position);\n// console.log((Math.abs(Belt.children[i].position.x-Ship.position.x))<1)\n//console.log(((Belt.children[i].position.y < (Ship.position.y+1))||(Belt.children[i].position.y > (Ship.position.y-1))));\n//console.log(((Belt.children[i].position.z > (Ship.position.z+1))||(Belt.children[i].position.z < (Ship.position.z-1))));\n//console.log(Ship.position.x);\ndocument.querySelector('.game_over').classList.remove('hidden');Game_over=true;}}}}}/*=======================Render loop==========================*/function render(){renderer.render(scene,camera);}//**********Helper functions********************//\nfunction getRandomInt(max){return Math.floor(Math.random()*max);}function getRandomRad(max){return Math.floor(Math.random()*max)/(2*Math.PI);}function activateAllActions(){console.log('activateAllActions');actions.forEach(function(action){console.log('play');action.play();});}function deactivateAllActions(){console.log('deactivateAllActions');actions.forEach(function(action){action.stop();});}//*=====================Movment===============*//\nfunction up(){if(Ship.position.y<2){camera.position.set(camera.position.x,camera.position.y-0.25,camera.position.z);Ship.position.y+=0.25;}}function down(){if(Ship.position.y>-2){camera.position.set(camera.position.x,camera.position.y+0.25,camera.position.z);Ship.position.y-=0.25;}//camera.update()\n}function left(){if(Ship.position.x>-3){camera.position.set(camera.position.x-0.25,camera.position.y,camera.position.z);Ship.position.x-=0.25;}//camera.target = Target\n//camera.update()\n}function right(){if(Ship.position.x<3){camera.position.set(camera.position.x+0.25,camera.position.y,camera.position.z);Ship.position.x+=0.25;}}","map":{"version":3,"names":["THREE","OrbitControls","GLTFLoader","camera","scene","renderer","controls","clock","Ship","Belt","Ammo","Score","Game_over","Target","mesh","mixer","intersected","idleAction","walkAction","runAction","idleWeight","walkWeight","runWeight","actions","settings","matrix","Matrix4","loader","raycaster","Raycaster","mouse","Vector2","color","Color","white","setHex","init","animate","PerspectiveCamera","window","innerWidth","innerHeight","position","set","Clock","Scene","light","HemisphereLight","add","pointlight","PointLight","dirLight","DirectionalLight","castShadow","shadow","top","bottom","left","right","near","far","fog","Fog","loadSpaceShip","Group","loadInitAsteroid","start_time","Object","group","loadLaser","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","setClearColor","document","body","appendChild","domElement","enableDamping","enableZoom","enablePan","sphereRadius","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","transparent","opacity","mouseButtons","LEFT","MIDDLE","MOUSE","DOLLY","RIGHT","PAN","addEventListener","onWindowResize","onMouseMove","fireCannon","onkeypress","KeyCheck","onkeydown","update","load","gltf","rotation","y","Math","PI","laser","aspect","updateProjectionMatrix","event","preventDefault","x","clientX","clientY","shipMove","KeyID","keyCode","up","down","z","requestAnimationFrame","intersectedRay","addAsteroids","moveAsteroids","updateLasers","updateExplode","canvas","querySelector","getAttribute","classList","undefined","setAttribute","mixerUpdateDelta","getDelta","render","fireLaser","object","parent","explode","weight","start","getElapsedTime","value","parseInt","innerText","ammo","clone","copy","scale","zTarget","xTarget","yTarget","targetPosition","Vector3","target","normalize","intersects","intersectObjects","children","length","intersectPoint","point","t","max_diff","i","position_t","total","remove","astro","to","diff","sin","cos","tan","setFromCamera","intersection","intersectObject","model","loadAsteroid","num","first","max","console","log","belt","getRandomInt","spawn_time","abs","floor","random","getRandomRad","activateAllActions","forEach","action","play","deactivateAllActions","stop"],"sources":["C:/Users/kueny/Documents/astroGaming/src/index.js"],"sourcesContent":["\r\n    import * as THREE from './node_modules/three/build/three.module.js';\r\n    import { OrbitControls } from './node_modules/three/examples/jsm/controls/OrbitControls.js';\r\n    // import {SpaceShip} from './js/spaceship.js';\r\n    import { GLTFLoader } from './node_modules/three/examples/jsm/loaders/GLTFLoader.js';\r\n    let camera, scene, renderer, controls, clock;\r\n    let Ship;\r\n    let Belt;\r\n    let Ammo;\r\n    let Score = 0;\r\n    let Game_over = false;\r\n    let Target;\r\n    let mesh,mixer;\r\n    let intersected;\r\n    let idleAction, walkAction, runAction;\r\n    let idleWeight, walkWeight, runWeight;\r\n    let actions, settings;\r\n    const matrix = new THREE.Matrix4();\r\n    const loader = new GLTFLoader();\r\n    const raycaster = new THREE.Raycaster();\r\n    const mouse = new THREE.Vector2( 1, 1 );\r\n\r\n    const color = new THREE.Color();\r\n    const white = new THREE.Color().setHex( 0xffffff );\r\n\r\n    init();\r\n    animate();\r\n\r\n    function init() {\r\n\r\n      camera = new THREE.PerspectiveCamera( 10, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n      camera.position.set( 0, 0, 50 );\r\n\r\n      clock = new THREE.Clock();\r\n\r\n      scene = new THREE.Scene();\r\n\r\n      //=========================Lighting================================\r\n      const light = new THREE.HemisphereLight( 0xffffff, 0x333333 );\r\n      light.position.set( 0, 0, 0 );\r\n      // scene.add( light );\r\n      //const light = new THREE.AmbientLight( 0x404040 ); // soft white light\r\n      scene.add( light );\r\n      var pointlight = new THREE.PointLight(0xa0a0a0);\r\n      pointlight.position.set(20, 40, 20);\r\n      scene.add(pointlight)\r\n\r\n      const dirLight = new THREE.DirectionalLight( 0xffffff );\r\n      dirLight.position.set( - 3, 10, - 10 );\r\n      dirLight.castShadow = true;\r\n      dirLight.shadow.camera.top = 2;\r\n      dirLight.shadow.camera.bottom = - 2;\r\n      dirLight.shadow.camera.left = - 2;\r\n      dirLight.shadow.camera.right = 2;\r\n      dirLight.shadow.camera.near = 0.1;\r\n      dirLight.shadow.camera.far = 40;\r\n      scene.add( dirLight );\r\n\r\n      scene.fog = new THREE.Fog( 0x333333, 25, 300 );\r\n      //==========================Load==============================\r\n      //scene.background = new THREE.Color( 0x25037c );\r\n      loadSpaceShip()\r\n      Belt = new THREE.Group();\r\n      loadInitAsteroid()\r\n      Belt.start_time = 0;\r\n      Ammo =  new Object()\r\n      Ammo.group = new THREE.Group()\r\n      scene.add(Ammo.group)\r\n      loadLaser()\r\n      //===========================render=========================\r\n      renderer = new THREE.WebGLRenderer( { antialias: true, alpha: true } );\r\n      renderer.setPixelRatio( window.devicePixelRatio );\r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n      renderer.setClearColor( 0x000000, 0 ); // the default\r\n      document.body.appendChild( renderer.domElement );\r\n\r\n      controls = new OrbitControls( camera, renderer.domElement );\r\n      controls.enableDamping = false;\r\n      controls.enableZoom = false;\r\n      controls.enablePan = false;\r\n\r\n\r\n      // Create a mesh using the geometry and material\r\n      Target = new THREE.Group();\r\n      // Create the spheres\r\n      const sphereRadius = 0.1;\r\n      const sphereGeometry = new THREE.SphereGeometry(sphereRadius, 32, 32);\r\n      const sphereMaterial = new THREE.MeshBasicMaterial({\r\n          color: 0xffffff, // Set the desired color\r\n          transparent: true,\r\n          opacity: 0.5, // Set the desired opacity (0.0 - fully transparent, 1.0 - fully opaque)\r\n        });\r\n\r\n      //console.log(window.innerWidth);\r\n\r\n\r\n      //\r\n      // scene.add(Target)\r\n\r\n      // Position and rotate the plane as needed\r\n\r\n\r\n\r\n      // Add the plane to the scene\r\n      //scene.add(Target);\r\n      // console.log(Target);\r\n      // //controls.screenSpacePanning = false\r\n      // console.log(controls);\r\n      controls.mouseButtons = {\r\n      \tLEFT: '',\r\n      \tMIDDLE: THREE.MOUSE.DOLLY,\r\n      \tRIGHT: THREE.MOUSE.PAN\r\n      }\r\n\r\n\r\n      window.addEventListener( 'resize', onWindowResize );\r\n      document.addEventListener( 'mousemove', onMouseMove );\r\n      document.addEventListener(\"click\", fireCannon);\r\n      document.onkeypress = KeyCheck;\r\n      document.onkeydown = KeyCheck;\r\n      controls.update()\r\n    }\r\n\r\n    function loadSpaceShip(){\r\n      loader.load(\r\n     \t// resource URL\r\n     \t'/assets/model.glb',\r\n     \t// called when the resource is loaded\r\n     \tfunction ( gltf ) {\r\n         //console.log(gltf.scene);\r\n         Ship = gltf.scene;\r\n         Ship.rotation.y = Math.PI\r\n\r\n         //Ship.rotation.z = Math.PI\r\n         Ship.position.y=-2\r\n     \t\tscene.add( Ship );\r\n    })\r\n  }\r\n  function loadLaser(){\r\n    loader.load(\r\n    // resource URL\r\n    '/assets/beam.glb',\r\n    // called when the resource is loaded\r\n    function ( gltf ) {\r\n         Ammo.laser= gltf.scene\r\n      } );\r\n  }\r\n    function onWindowResize() {\r\n\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n\r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n    }\r\n\r\n    function onMouseMove( event ) {\r\n\r\n      event.preventDefault();\r\n\r\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n      shipMove()\r\n    }\r\n\r\n    function KeyCheck()\r\n    {\r\n        var KeyID = event.keyCode;\r\n\r\n        switch(KeyID)\r\n        {\r\n          //left\r\n          case 37:\r\n          left();\r\n          break;\r\n\r\n          case 65:\r\n          left();\r\n          break;\r\n\r\n          //up\r\n          case 38:\r\n          up();\r\n          break\r\n\r\n          case 87:\r\n          up();\r\n          break\r\n\r\n          //right\r\n          case 39:\r\n          right();\r\n          break;\r\n\r\n          case 68:\r\n          right();\r\n          break;\r\n\r\n          //down\r\n          case 40:\r\n          down();\r\n          break;\r\n\r\n          case 83:\r\n          down();\r\n          break;\r\n     }\r\n   }\r\n    function shipMove(){\r\n      if (Ship){\r\n        Ship.rotation.x = ((mouse.y/(2*Math.PI))+(Math.PI/16))\r\n        Ship.rotation.z =  -(mouse.x/(Math.PI))\r\n        Ship.rotation.y = -(mouse.x/(2*Math.PI))-Math.PI\r\n      }\r\n\r\n      //console.log(Ship.rotation);\r\n      //Ship.rotation.y = (Ship.rotation.x-(Math.PI/2+.5))+(Ship.rotation.z-Math.PI)\r\n      //Ship.rotation.y = -Math.sin(mouse.x,mouse.y)/2\r\n    }\r\n\r\n    function animate() {\r\n\r\n      requestAnimationFrame( animate );\r\n\r\n      controls.update();\r\n      //console.log(Belt);\r\n      if (Belt){\r\n        //console.log(Belt);\r\n        if (!Game_over)\r\n            intersectedRay();\r\n\r\n      }\r\n      //updateLaserPosistions\r\n      if (!Game_over)\r\n      addAsteroids()\r\n      moveAsteroids()\r\n      updateLasers()\r\n      updateExplode()\r\n      if(Game_over){\r\n        const canvas = document.querySelector('canvas')\r\n        if (canvas.getAttribute('restart') ==  \"true\"){\r\n          document.querySelector('.game_over').classList.add('hidden')\r\n          Game_over = undefined\r\n          canvas.setAttribute('restart',false)\r\n          document.querySelector('h1 span').setAttribute('value',0)\r\n        }\r\n      }\r\n      // Get the time elapsed since the last frame, used for mixer update (if not in single step mode)\r\n      let mixerUpdateDelta = clock.getDelta();\r\n      // Update the animation mixer, and render this frame\r\n      if (mixer){\r\n          mixer.update( mixerUpdateDelta );\r\n      }\r\n      //render();\r\n      renderer.render( scene, camera );\r\n\r\n\r\n    }\r\n    /*==========================Fire=====================*/\r\n    function fireCannon(){\r\n      // console.log('fire');\r\n      // console.log(intersected);\r\n      // console.log(Belt);\r\n      if (!Game_over){\r\n        fireLaser()\r\n        if (intersected){\r\n          if (!intersected.object.parent.explode){\r\n            intersected.object.parent.explode = true\r\n            intersected.object.parent.weight = false\r\n            intersected.object.parent.start = clock.getElapsedTime()+0.5\r\n            // console.log(document.querySelector(\"h1 span\"));\r\n            let value = parseInt(document.querySelector(\"h1 span\").getAttribute('value'))+100\r\n            // console.log(value);\r\n            document.querySelector(\"h1 span\").setAttribute('value',value)\r\n            document.querySelector(\"h1 span\").innerText = value\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n/***\r\n****================Laser================\r\n****/\r\n// function fireLaser() {\r\n//   const ammo = Ammo.laser.clone();\r\n//   const targetZ = 100; // Fixed z-index for the laser's target position\r\n//\r\n//   ammo.position.copy(Ship.position);\r\n//   ammo.scale.set(5, 2, 5);\r\n//\r\n//   // Calculate the mouse position in normalized device coordinates (NDC)\r\n//   const mousePosition = new THREE.Vector3(\r\n//     (mouse.x / window.innerWidth) * 2 - 1,\r\n//     -(mouse.y / window.innerHeight) * 2 + 1,\r\n//     0.5\r\n//   );\r\n//\r\n//   // Create a raycaster from the mouse position\r\n//   const raycaster = new THREE.Raycaster();\r\n//   raycaster.setFromCamera(mousePosition, camera);\r\n//\r\n//   // Intersect the raycaster with the scene's objects\r\n//   const intersects = raycaster.intersectObjects(scene.children, true);\r\n//\r\n//   if (intersects.length > 0) {\r\n//     // Retrieve the first intersection point\r\n//     const intersectPoint = intersects[0].point;\r\n//\r\n//     // Set target position to the intersection point\r\n//     ammo.target = intersectPoint;\r\n//   }\r\n//   else{\r\n//\r\n//   }\r\n//\r\n//   Ammo.group.add(ammo);\r\n// }\r\n\r\n\r\nfunction fireLaser() {\r\n\r\n\r\n  const ammo = Ammo.laser.clone();\r\n  //\r\n  ammo.position.copy(Ship.position);\r\n  ammo.scale.set(0.25,0.25,0.25);\r\n  ammo.rotation.x= (mouse.y*Math.PI/8)-Math.PI/2\r\n\r\n  ammo.rotation.z = -1*mouse.x*Math.PI/4\r\n  //\r\n  // // Calculate the target position based on the mouse position\r\n  const zTarget = 100;\r\n  //let xTarget = Math.sin(mouse.x*Math.PI/4)\r\n  let xTarget = (mouse.x*Math.PI/4)\r\n  let yTarget = (mouse.y*Math.PI/8)\r\n  //degrees to radians\r\n  xTarget = xTarget * 180/(Math.PI*3/2)\r\n  yTarget = yTarget * 180/(Math.PI*3/2)\r\n\r\n  const targetPosition = new THREE.Vector3(\r\n    xTarget,\r\n    (yTarget),\r\n    -zTarget\r\n  );\r\n  ammo.target = targetPosition.normalize();\r\n  const intersects = raycaster.intersectObjects(scene.children, true);\r\n  if (intersects.length > 0) {\r\n      // Retrieve the first intersection point\r\n      const intersectPoint = intersects[0].point;\r\n\r\n      // Set target position to the intersection point\r\n      ammo.target = intersectPoint.normalize();\r\n    }\r\n\r\n    //console.log(mouse,ammo.target);\r\n  Ammo.group.add(ammo);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    // function fireLaser(){\r\n    //   const ammo = Ammo.laser.clone()\r\n    //   //belt.position.set(getRandomInt(max)-max/2,getRandomInt(max)-max/2,-getRandomInt(max)-max/2)\r\n    //   //getRandomInt(max)-max/2\r\n    //   ammo.position.set(Ship.position.x,Ship.position.y,Ship.position.z)\r\n    //   ammo.scale.set(5,2,5)\r\n    //\r\n    //   //ammo.rotation.set(Math.PI/4,Math.PI/4,0)\r\n    //\r\n    //   ammo.rotation.x = (mouse.y/(2*Math.PI))+(Math.PI/4)\r\n    //   ammo.rotation.z =  0//-(mouse.x/(Math.PI))+(Math.PI/4)\r\n    //   ammo.rotation.y = -(mouse.x/(Math.PI))+(Math.PI/4)//-Math.sin(mouse.x,mouse.y)/2\r\n    //\r\n    //   ammo.mouse = mouse.clone()\r\n    //   //console.log(mouse);\r\n    //   Ammo.group.add(ammo)\r\n    //\r\n    // }\r\n    /*==================Animamations=====================*/\r\n\r\n    function updateLasers() {\r\n\r\n      const t = clock.getElapsedTime();\r\n      const max_diff = 0.25\r\n      for (let i = 0; i < Ammo.group.children.length; i++) {\r\n        const position_t = Ammo.group.children[i].position;\r\n\r\n        // position_t.x = Ammo.group.children[i].target.x\r\n        // position_t.y = Ammo.group.children[i].target.y\r\n        // position_t.z = Ammo.group.children[i].target.z\r\n\r\n        position_t.x += Ammo.group.children[i].target.x / max_diff;\r\n        position_t.y += Ammo.group.children[i].target.y / max_diff;\r\n        position_t.z += Ammo.group.children[i].target.z / max_diff;\r\n      }\r\n    }\r\n    // function updateLasers(){\r\n    //   //console.log(Ammo);\r\n    //   const max_diff=1;\r\n    //   const t = clock.getElapsedTime()\r\n    //   for (var i =0;i<Ammo.group.children.length;i++)\r\n    //   {\r\n    //     //console.log(Ammo.group.children[i]);\r\n    //     const rotation_t = Ammo.group.children[i].rotation\r\n    //     //console.log(rotation_t);\r\n    //     Ammo.group.children[i].position.x+=Ammo.group.children[i].mouse.x/max_diff//(rotation_t.x/max_diff)\r\n    //     Ammo.group.children[i].position.y+=Ammo.group.children[i].mouse.y/max_diff\r\n    //     //Ammo.group.children[i].position.y+=(rotation_t.y/max_diff)\r\n    //     Ammo.group.children[i].position.z-=1\r\n    //   }\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function updateExplode(){\r\n\r\n      if (Belt){\r\n        //console.log(Belt.children);\r\n        const total = Belt.children.length\r\n        for (let i=0;i<Belt.children.length;i++){\r\n            if (Belt.children[i].explode){\r\n              if (Belt.children[i].explode == true){\r\n                if(Belt.children[i].start<clock.getElapsedTime())\r\n                  explode(Belt.children[i])\r\n\r\n              }\r\n              if ((Belt.children[i].start+3)<clock.getElapsedTime()){\r\n                Belt.remove(Belt.children[i])\r\n              }\r\n            }\r\n        }\r\n\r\n      }\r\n\r\n\r\n    }\r\n    function explode(astro,to){\r\n      const total = astro.children.length\r\n      const diff = 50;\r\n      for (let i =1;i<total-1;i++){\r\n        astro.children[i].position.x+=(Math.sin(i/total)/diff)\r\n        astro.children[i].position.y+=(Math.cos(2*i/total)/diff)\r\n        astro.children[i].position.z+=(Math.tan(2*i/(total))/diff)\r\n      }\r\n    }\r\n    /*==========================Targeting======================*/\r\n    function intersectedRay(){\r\n      raycaster.setFromCamera( mouse, camera );\r\n\r\n      const intersection = raycaster.intersectObject( Belt );\r\n      //console.log(raycaster);\r\n      if ( intersection.length > 0 ) {\r\n\r\n        intersected = intersection[ 0 ];\r\n        //console.log(intersection);\r\n        return intersected\r\n      }\r\n      return null;\r\n    }\r\n    /*============================Ateroid Feild=================================*/\r\n    function loadInitAsteroid(){\r\n      loader.load(\r\n      // resource URL\r\n      '/assets/astro2.glb',\r\n      // called when the resource is loaded\r\n      function ( gltf ) {\r\n        Belt.model = gltf.scene.clone()\r\n        loadAsteroid(40,true)\r\n      } );\r\n     //console.log(Belt);\r\n     scene.add( Belt );\r\n    }\r\n    function loadAsteroid(num,first){\r\n\r\n        //*=====================Feild of view===================*/\r\n       const max = 80\r\n       console.log(num);\r\n       if (num>30){\r\n         num = 30\r\n       }\r\n       for (let i =0;i<num;i++)\r\n       {\r\n         const belt = Belt.model.clone()\r\n         belt.position.set(getRandomInt(max)-max/2,getRandomInt(max)-max/2,-150-getRandomInt(max)-max/2)\r\n         belt.rotation.set(getRandomInt(360),getRandomInt(360),getRandomInt(360))\r\n         //getRandomInt(max)-max/2\r\n         //belt.position.set(0,0,-20)\r\n         if(!first){\r\n           belt.spawn_time=clock.getElapsedTime()\r\n         }\r\n         else{\r\n           belt.spawn_time=0\r\n         }\r\n         Belt.add(belt)\r\n\r\n       }\r\n\r\n    }\r\n    function addAsteroids(){\r\n      if (Belt){\r\n        const t = clock.getElapsedTime()\r\n        if ((Belt.start_time+2)<t){\r\n          loadAsteroid(10+(parseInt(t)/2), false)\r\n          Belt.start_time=t\r\n          // console.log(t);\r\n        }\r\n      }\r\n    }\r\n    function moveAsteroids(){\r\n      if (Belt){\r\n        //console.log(Belt.children);\r\n        //const total = Belt.children.length\r\n        for (let i=0;i<Belt.children.length;i++){\r\n          Belt.children[i].position.z+=1;\r\n          if (Belt.children[i].spawn_time+5<clock.getElapsedTime()){\r\n            //console.log('DELETE');\r\n            Belt.remove(Belt.children[i])\r\n          }\r\n          //intersects with ship\r\n          if (Belt.children[i].weight != false){\r\n\r\n            if ((Math.abs(Belt.children[i].position.x-Ship.position.x)<5)&&\r\n                (Math.abs(Belt.children[i].position.y-Ship.position.y)<2)&&\r\n                (Math.abs(Belt.children[i].position.z-Ship.position.z)<2))\r\n            {\r\n              // console.log(Belt.children[i].position);\r\n              // console.log((Math.abs(Belt.children[i].position.x-Ship.position.x))<1)\r\n              //console.log(((Belt.children[i].position.y < (Ship.position.y+1))||(Belt.children[i].position.y > (Ship.position.y-1))));\r\n              //console.log(((Belt.children[i].position.z > (Ship.position.z+1))||(Belt.children[i].position.z < (Ship.position.z-1))));\r\n              //console.log(Ship.position.x);\r\n              document.querySelector('.game_over').classList.remove('hidden')\r\n              Game_over = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    /*=======================Render loop==========================*/\r\n    function render() {\r\n\r\n      renderer.render( scene, camera );\r\n\r\n    }\r\n    //**********Helper functions********************//\r\n    function getRandomInt(max) {\r\n      return Math.floor(Math.random() * max);\r\n    }\r\n    function getRandomRad(max) {\r\n      return Math.floor(Math.random() * max)/(2*Math.PI);\r\n    }\r\n    function activateAllActions() {\r\n      console.log('activateAllActions');\r\n      actions.forEach( function ( action ) {\r\n        console.log('play');\r\n        action.play();\r\n\r\n      } );\r\n\r\n    }\r\n    function deactivateAllActions() {\r\n      console.log('deactivateAllActions');\r\n      actions.forEach( function ( action ) {\r\n\r\n        action.stop();\r\n\r\n      } );\r\n\r\n    }\r\n\r\n    //*=====================Movment===============*//\r\n    function up(){\r\n      if (Ship.position.y<2){\r\n        camera.position.set(camera.position.x,(camera.position.y-0.25),camera.position.z)\r\n        Ship.position.y+=0.25\r\n      }\r\n    }\r\n    function down(){\r\n      if (Ship.position.y>-2){\r\n        camera.position.set(camera.position.x,(camera.position.y+0.25),camera.position.z)\r\n        Ship.position.y-=0.25\r\n      }\r\n      //camera.update()\r\n    }\r\n    function left(){\r\n      if (Ship.position.x>-3){\r\n        camera.position.set((camera.position.x-0.25),(camera.position.y),camera.position.z)\r\n        Ship.position.x-=0.25\r\n      }\r\n      //camera.target = Target\r\n      //camera.update()\r\n    }\r\n    function right(){\r\n      if (Ship.position.x<3){\r\n        camera.position.set((camera.position.x+0.25),(camera.position.y),camera.position.z)\r\n        Ship.position.x+=0.25\r\n      }\r\n    }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}