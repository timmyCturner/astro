{"ast":null,"code":"import _createClass from \"C:/Users/kueny/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/kueny/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"C:/Users/kueny/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/kueny/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/kueny/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from '/node_modules/three/build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar _changeEvent = {\n  type: 'change'\n};\nvar _startEvent = {\n  type: 'start'\n};\nvar _endEvent = {\n  type: 'end'\n};\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n  var _super = _createSuper(OrbitControls);\n  function OrbitControls(object, domElement) {\n    var _this;\n    _classCallCheck(this, OrbitControls);\n    _this = _super.call(this);\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n    if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    _this.object = object;\n    _this.domElement = domElement;\n    _this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n    // Set to false to disable this control\n    _this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    _this.target = new Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    _this.minPolarAngle = 0; // radians\n    _this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    _this.minAzimuthAngle = -Infinity; // radians\n    _this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    _this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    };\n\n    // Mouse buttons\n    _this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    };\n\n    // Touch fingers\n    _this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    };\n\n    // for reset\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom;\n\n    // the target DOM element for key events\n    _this._domElementKeyEvents = null;\n\n    //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n    _this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    _this.update = function () {\n      var offset = new Vector3();\n\n      // so camera.up is the orbit axis\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n\n        // restrict theta to be between desired limits\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1;\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    }();\n    _this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerCancel);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    var scope = _assertThisInitialized(_this);\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n    var pointers = [];\n    var pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      var dx = pointers[0].pageX - pointers[1].pageX;\n      var dy = pointers[0].pageY - pointers[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      var position = getSecondPointerPosition(event);\n      var dx = event.pageX - position.x;\n      var dy = event.pageY - position.y;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      }\n\n      //\n\n      addPointer(event);\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      removePointer(event);\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n    function onMouseDown(event) {\n      var mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (var i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      var position = pointerPositions[event.pointerId];\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      var pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n\n    //\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerCancel);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    });\n\n    // force an update at start\n\n    _this.update();\n    return _this;\n  }\n  return _createClass(OrbitControls);\n}(EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n  var _super2 = _createSuper(MapControls);\n  function MapControls(object, domElement) {\n    var _this2;\n    _classCallCheck(this, MapControls);\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = MOUSE.ROTATE;\n    _this2.touches.ONE = TOUCH.PAN;\n    _this2.touches.TWO = TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n  return _createClass(MapControls);\n}(OrbitControls);\nexport { OrbitControls, MapControls };","map":{"version":3,"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","_changeEvent","type","_startEvent","_endEvent","OrbitControls","_EventDispatcher","_inherits","_super","_createSuper","object","domElement","_this","_classCallCheck","call","undefined","console","warn","document","error","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","_assertThisInitialized","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","code","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","ctrlKey","metaKey","shiftKey","trackPointer","DOLLY_ROTATE","push","i","splice","pointer","passive","_createClass","MapControls","_OrbitControls","_super2","_this2"],"sources":["C:/Users/kueny/Documents/astroGaming/node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from '/node_modules/three/build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}